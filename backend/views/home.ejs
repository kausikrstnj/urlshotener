<!DOCTYPE html>
<html lang="en">

<head>
    <title>Login</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            height: 100%;
            justify-content: center;
            align-items: center;
            margin: 0;
        }

        html {
            height: 100%;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .form-container {
            max-width: 400px;
            background-color: #fff;
            padding: 32px 24px;
            font-size: 14px;
            font-family: inherit;
            color: #212121;
            display: flex;
            flex-direction: column;
            gap: 20px;
            box-sizing: border-box;
            border-radius: 10px;
            box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.084), 0px 2px 3px rgba(0, 0, 0, 0.168);
        }

        .form-container button:active {
            scale: 0.95;
        }

        .form-container .logo-container {
            text-align: center;
            font-weight: 600;
            font-size: 18px;
        }

        .form-container .form {
            display: flex;
            flex-direction: column;
        }

        .form-container .form-group {
            display: flex;
            flex-direction: column;
            gap: 2px;
        }

        .form-container .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-container .form-group input {
            width: 100%;
            padding: 12px 16px;
            border-radius: 6px;
            font-family: inherit;
            border: 1px solid #ccc;
        }

        .form-container .form-group input::placeholder {
            opacity: 0.5;
        }

        .form-container .form-group input:focus {
            outline: none;
            border-color: #1778f2;
        }

        .form-container .form-submit-btn {
            display: flex;
            justify-content: center;
            align-items: center;
            font-family: inherit;
            color: #fff;
            background-color: #212121;
            border: none;
            width: 100%;
            padding: 12px 16px;
            font-size: inherit;
            gap: 8px;
            margin: 12px 0;
            cursor: pointer;
            border-radius: 6px;
            box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.084), 0px 2px 3px rgba(0, 0, 0, 0.168);
        }

        .form-container .form-submit-btn:hover {
            background-color: #313131;
        }

        .form-container .link {
            color: #1778f2;
            text-decoration: none;
        }

        .form-container .signup-link {
            align-self: center;
            font-weight: 500;
        }

        .form-container .signup-link .link {
            font-weight: 400;
        }

        .form-container .link:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <div>
        <br>
        <h1>URL Shortener Application</h1>
        <br>
    </div>
    <div class="form-container">
        <form class="form" method="POST" action="/shrinkUrl">
            <div class="form-group">
                <label for="url">URL</label>
                <input type="text" id="url" name="url" placeholder="Enter your url" required="">
            </div>
            <button class="form-submit-btn" type="submit">Shrink URL</button>
            <input type="hidden" name="userId" value="<%= userId %>">
        </form>
    </div>
    <br>
    <h1>Shrinked URLs</h1>
    <br>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Long URL</th>
                <th scope="col">Short URl</th>
                <th scope="col">Clicks</th>
            </tr>
        </thead>
        <tbody>
            <% if (urls && urls.length> 0) { %>
                <% urls.forEach(url=> { %>
                    <tr>
                        <td>
                            <a href="<%= url.originalUrl %>">
                                <%= url.originalUrl %>
                            </a>
                        </td>
                        <td>
                            <form class="form" method="GET" action="/https">
                                <input type="hidden" name="shortUrl" value="<%= url.shortUrl %>">
                                <button style="color: #1778f2;background: transparent;border: none;" type="submit"
                                    id="shortUrl" name="shortUrl" value="https://<%= url.shortUrl %>">https://
                                    <%= url.shortUrl %>
                                </button>
                            </form>
                        </td>
                        <td>
                            <%= url.clicks %>
                        </td>
                    </tr>
                    <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="3">No URLs available.</td>
                            </tr>
                            <% } %>
        </tbody>

    </table>

</body>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get all anchor tags with class "shortUrl"
        const shortUrls = document.querySelectorAll('.shortUrl');

        // Add click event listener to each short URL link
        shortUrls.forEach(url => {
            url.addEventListener('click', async function (event) {
                // Prevent the default behavior of opening the link
                event.preventDefault();

                // Get the URL from the data-url attribute
                const shortUrl = this.getAttribute('data-url');

                try {
                    // Send a request to the server to update the click count
                    const response = await fetch(`/updateClicks?url=${encodeURIComponent(shortUrl)}`);
                    if (response.ok) {
                        // If the request is successful, update the clicks count in the table
                        const clicksElement = this.parentElement.nextElementSibling;
                        clicksElement.textContent = parseInt(clicksElement.textContent) + 1;
                    } else {
                        console.error('Failed to update clicks count');
                    }
                } catch (error) {
                    console.error('Error updating clicks count:', error);
                }
            });
        });
    });

</script>

</html>